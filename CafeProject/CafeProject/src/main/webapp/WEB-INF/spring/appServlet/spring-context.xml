<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<resources mapping="/resources/**" location="/resources/image/" />
	<resources mapping="/resources/**" location="/resources/js/" />
	<resources mapping="/resources/**" location="/resources/css/" />
	<resources mapping="/resources/**" location="/resources/ckeditor/" />
	<resources mapping="/resources/**" location="/resources/jpicker/" />

	<!-- Add mysql data source -->

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- Mapping data between server and client -->
	<!-- CONFIG MULTI LANGUAGE -->
	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="vi"/>
	</beans:bean>
	
	<interceptors>
		<beans:bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<beans:property name="paramName" value="lang" />
		</beans:bean>
	</interceptors>
	
	<!-- <beans:bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
    <beans:bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- setting maximum upload size -->
       <!--<!<beans:property name="maxUploadSize" value="10485760" />-->
       <beans:property name="maxUploadSize" value="16777216" />
    </beans:bean>
	<!-- <beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
  	  	<beans:property name="basename" value="properties" />
	</beans:bean> -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>/properties/common</beans:value>
				<beans:value>/properties/authority</beans:value>
				<beans:value>/properties/role</beans:value>
				<beans:value>/properties/staff</beans:value>
				<beans:value>/properties/menu</beans:value>
				<beans:value>/properties/cafeTable</beans:value>
				<beans:value>/properties/food</beans:value>
				<beans:value>/properties/otherOutlay</beans:value>
				<beans:value>/properties/cafeOrder</beans:value>
				<beans:value>/properties/statistic</beans:value>
				<beans:value>/properties/permission</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>	
	<context:component-scan base-package="com.cafe.controller,com.cafe.base.controller"/>
</beans:beans>
